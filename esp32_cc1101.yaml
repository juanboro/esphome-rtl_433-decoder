# This specific example is for a CC1101 connected to a ESP32... 
esphome:
  platformio_options:
    lib_ldf_mode: "deep+" # only necessary for arduino platform and radiolib arduino SPI dependency
  libraries:
    - RadioLib

external_components:
  - source:
      type: git
      url: https://github.com/juanboro/esphome-radiolib-cc1101

packages:
  cc1101_controls: # add interactive control
    url: https://github.com/juanboro/esphome-radiolib-cc1101
    files: [cc1101-controls.yaml]  

mqtt:
  broker: !secret mqtt_host
  id: mqtt_client

esp32:  
  board: esp32dev
  framework:
    type: esp-idf
#    type: arduino

wifi:
  ssid: !secret wifi_name
  password: !secret wifi_pass
  fast_connect: true
#  power_save_mode: HIGH

logger:
#  level: VERBOSE
  level: INFO
  
captive_portal:

api:

web_server:
  port: 80

spi:
  # these are the default VSPI pins to use on ESP32
  clk_pin: 18   # CC1001 pin 5
  mosi_pin: 23  # CC1001 pin 6
  miso_pin: 19  # CC1001 pin 7

radiolib_cc1101:
  id: mycc1101
  cs_pin: 5 # CC1101 pin 4
  rx_pin:
    number: 32 # This is CC1101 GDO0 pin 3
    allow_other_uses: true
  tx_pin:
    number: 32 # This is also GDO0
    allow_other_uses: true

  # other optional settings.. (use control settings to verify they work and then set)
  filter: 468khz # RX filter BW (58-812kHz)
  bitrate: 40 # bitrate (0.025-600kbps)
  reg_agcctrl0: 0xb2 # agcctrol0 register setting
  reg_agcctrl1: 0x00 # agcctrol1 register setting
  reg_agcctrl2: 0xc7 # agcctrol2 register setting

remote_receiver:
  - id: rf_receiver
    idle: 10ms
    pin:
      number: 32 # This is also GDO0
      allow_other_uses: true
      id: cc1101_gd0_recv

remote_transmitter:
  - id: rf_transmitter
    pin:
      number: 32 # This is also GDO0
      allow_other_uses: true
      id: cc1101_gd0_xmit
    on_transmit:
      then:
        - lambda: |-
            id(mycc1101).xmit();
            id(rf_transmitter).setup();
    on_complete:
      then:
        - lambda: id(mycc1101).recv();
    carrier_duty_percent: 100%

ota:
  platform: esphome
  on_begin:
    - lambda: id(mycc1101).standby();
